{
  "_args": [
    [
      {
        "raw": "react-native-super-grid",
        "scope": null,
        "escapedName": "react-native-super-grid",
        "name": "react-native-super-grid",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/ChrisLam/AwesomeProject"
    ]
  ],
  "_from": "react-native-super-grid@latest",
  "_id": "react-native-super-grid@2.0.2",
  "_inCache": true,
  "_location": "/react-native-super-grid",
  "_nodeVersion": "8.6.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-super-grid-2.0.2.tgz_1515680441118_0.5783257202710956"
  },
  "_npmUser": {
    "name": "saleel",
    "email": "saleel97@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-super-grid",
    "scope": null,
    "escapedName": "react-native-super-grid",
    "name": "react-native-super-grid",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-super-grid/-/react-native-super-grid-2.0.2.tgz",
  "_shasum": "bf2a10052782ce149755cb6fa6a00538289193e9",
  "_shrinkwrap": null,
  "_spec": "react-native-super-grid",
  "_where": "/Users/ChrisLam/AwesomeProject",
  "author": {
    "name": "Saleel"
  },
  "bugs": {
    "url": "https://github.com/saleel97/react-native-super-grid/issues"
  },
  "dependencies": {
    "prop-types": "^15.6.0"
  },
  "description": "Responsive Grid View for React Native",
  "devDependencies": {
    "eslint": "^3.19.0",
    "eslint-config-airbnb": "^14.1.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^4.0.0",
    "eslint-plugin-react": "^6.10.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-b5DY0Nw6/JQl3v9l54yb8dGxSztHVD5aoIscyOMlNeGXiMLUtB/eBGlDZVEquM28fYiEiagbbdyeGrmxhbaBnQ==",
    "shasum": "bf2a10052782ce149755cb6fa6a00538289193e9",
    "tarball": "https://registry.npmjs.org/react-native-super-grid/-/react-native-super-grid-2.0.2.tgz"
  },
  "gitHead": "2377d3408aff2d47b8bf7e6e9099e43a96e7c7c6",
  "homepage": "https://github.com/saleel97/react-native-super-grid",
  "keywords": [
    "react",
    "native",
    "responsive",
    "super",
    "grid",
    "view"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "saleel",
      "email": "saleel97@gmail.com"
    }
  ],
  "name": "react-native-super-grid",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-native": ">=0.49.0"
  },
  "readme": "# React Native Super Grid\n\nResponsive Grid View for React Native.\n\n\n\n## Getting Started\n\nThis component renders a Grid View that adapts itself to various screen resolutions.\n\nInstead of passing an itemPerRow argument, you pass ```itemDimension``` and each item will be rendered with a dimension size equal to or more than (to fill the screen) the given dimension.\n\nInternally, this component uses the native [ListView](https://facebook.github.io/react-native/docs/listview.html).\n\n\n### Installing\n\nYou can install the package via npm.\n\n```\nnpm install react-native-super-grid\n```\n\nIf your react native is below v0.49, install version 1.0.4 - npm install react-native-super-grid@1.0.4\n\n\n### Usage\n```\nimport GridView from 'react-native-super-grid';\n```\n```\n<GridView\n  itemDimension={130}\n  items={[1,2,3,4,5,6]}\n  renderItem={item => (<Text>{item}</Text>)}\n/>\n```\n\n#### Properties\n\n| Property | Type | Default Value | Description |\n|---|---|---|---|\n| renderItem | Function |  | Function to render each object. Should return a react native component.  |\n| items | Array |  | Items to be rendered. renderItem will be called with each item in this array.  |  |\n| itemDimension | Number | 120  | Minimum width or height for each item in pixels (virtual). |\n| fixed | Boolean | false  | If true, the exact ```itemDimension``` will be used and won't be adjusted to fit the screen. |\n| spacing | Number | 10 | Spacing between each item. |\n| style | [ListView](https://facebook.github.io/react-native/docs/listview.html) styles (Object) |  | Styles for the container. Styles for an item should be applied inside ```renderItem```. |\n| staticDimension | Number | undefined | Specifies a static width or height for the GridView container. If your container dimension is known or can be calculated at runtime (via ```Dimensions.get('window')```, for example), passing this prop will force the grid container to that dimension size and avoid the reflow associated with dynamically calculating it|\n| horizontal | boolean | false | If true, the grid will be scrolling horizontally|\n\nNote: If you want your item to fill the height when using a horizontal grid, you should give it a height of '100%'\n\n\n## Example\n```\nimport React, { Component } from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\nimport GridView from 'react-native-super-grid';\n\nexport default class Example extends Component {\n  render() {\n    // Taken from https://flatuicolors.com/\n    const items = [\n      { name: 'TURQUOISE', code: '#1abc9c' }, { name: 'EMERALD', code: '#2ecc71' },\n      { name: 'PETER RIVER', code: '#3498db' }, { name: 'AMETHYST', code: '#9b59b6' },\n      { name: 'WET ASPHALT', code: '#34495e' }, { name: 'GREEN SEA', code: '#16a085' },\n      { name: 'NEPHRITIS', code: '#27ae60' }, { name: 'BELIZE HOLE', code: '#2980b9' },\n      { name: 'WISTERIA', code: '#8e44ad' }, { name: 'MIDNIGHT BLUE', code: '#2c3e50' },\n      { name: 'SUN FLOWER', code: '#f1c40f' }, { name: 'CARROT', code: '#e67e22' },\n      { name: 'ALIZARIN', code: '#e74c3c' }, { name: 'CLOUDS', code: '#ecf0f1' },\n      { name: 'CONCRETE', code: '#95a5a6' }, { name: 'ORANGE', code: '#f39c12' },\n      { name: 'PUMPKIN', code: '#d35400' }, { name: 'POMEGRANATE', code: '#c0392b' },\n      { name: 'SILVER', code: '#bdc3c7' }, { name: 'ASBESTOS', code: '#7f8c8d' },\n    ];\n\n    return (\n      <GridView\n        itemDimension={130}\n        items={items}\n        style={styles.gridView}\n        renderItem={item => (\n          <View style={[styles.itemContainer, { backgroundColor: item.code }]}>\n            <Text style={styles.itemName}>{item.name}</Text>\n            <Text style={styles.itemCode}>{item.code}</Text>\n          </View>\n        )}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  gridView: {\n    paddingTop: 25,\n    flex: 1,\n  },\n  itemContainer: {\n    justifyContent: 'flex-end',\n    borderRadius: 5,\n    padding: 10,\n    height: 150,\n  },\n  itemName: {\n    fontSize: 16,\n    color: '#fff',\n    fontWeight: '600',\n  },\n  itemCode: {\n    fontWeight: '600',\n    fontSize: 12,\n    color: '#fff',\n  },\n});\n```\n\n| ![iPhone6 Portrait](/screenshots/iphone6_portrait.png?raw=true \"iPhone6 Portrait\")| ![iPhone6 Landscape](/screenshots/iphone6_landscape.png?raw=true \"iPhone6 Landscape\") |\n|:---:|:---:|\n| iPhone6 Portrait | iPhone6 Landscape  |\n\n| ![iPad Air 2 Portrait](/screenshots/ipadair2_portrait.png?raw=true \"iPad Air 2 Portrait\") | ![iPad Air 2 Landscape](/screenshots/ipadair2_landscape.png?raw=true \"iPad Air 2 Landscape\") |\n|:---:|:---:|\n| iPad Air 2 Portrait | iPad Air 2 Landscape  |\n\n| ![Android Portrait](/screenshots/android_portrait.png?raw=true \"Android Portrait\") | ![Android Landscape](/screenshots/android_landscape.png?raw=true \"Android Landscape\") |\n|:---:|:---:|\n| Android Portrait | Android Landscape  |\n\n| ![Android Horizontal Portrait](/screenshots/android_horizontal_portrait.png?raw=true \"Android Horizontal Portrait\") | ![Android Horizontal Landscape](/screenshots/android_horizontal_landscape.png?raw=true \"Android Horizontal Landscape\") |\n|:---:|:---:|\n| Android Horizontal Portrait | Android Horizontal Landscape  |\n\n| ![iPhone Horizontal Portrait](/screenshots/iphone_horizontal_portrait.png?raw=true \"iPhone Horizontal Portrait\")| ![iPhone Horizontal Landscape](/screenshots/iphone_horizontal_landscape.png?raw=true \"iPhone Horizontal Landscape\") |\n|:---:|:---:|\n| iPhone Horizontal Portrait | iPhone Horizontal Landscape  |\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n\n\n## Changelog\n\n### [2.0.2] - 2018-01-11\n#### Added\n- Allow dynamic update of itemDimension\n\n### [2.0.1] - 2017-12-13\n#### Added\n- Fixed render empty section headers Warning. @mannycolon\n\n### [2.0.0] - 2017-12-02\n#### Added\n- Add ability to have a horizontal grid. @Sh3rawi\n\n\n### [1.1.0] - 2017-11-03 (Target React Native 0.49+)\n#### Added\n- Replace view.propTypes to ViewPropTypes for 0.49+. @caudaganesh\n\n\n### [1.0.4] - 2017-10-09\n#### Added\n- Optional staticWidth prop @thejettdurham.\n- Use prop-types package instead of deprecated react's PropTypes.\n\n\n### [1.0.3] - 2017-06-06\n#### Added\n- Pass row index to renderItem @heaversm.\n\n\n\n## Acknowledgments\n\nColors in the example from https://flatuicolors.com/.\n\nScreenshot Mockup generated from https://mockuphone.com.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/saleel97/react-native-super-grid.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "2.0.2"
}
